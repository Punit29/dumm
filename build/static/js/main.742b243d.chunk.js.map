{"version":3,"sources":["components/header.js","components/board.js","components/boards.js","components/Home.js","components/Card.js","components/Form.js","components/List.js","components/CheckItem.js","components/CheckList.js","components/Modal.js","components/Lists.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","src","alt","Board","props","boards","id","name","Boards","state","fetch","method","then","data","json","setState","this","map","board","Component","Home","Card","onClick","openModal","cards","event","deleteCard","Form","style","display","onChange","inputState","type","value","input","placeholder","addNewCard","buttonTitle","closeInputDiv","React","token","key","List","hideDiv","inputValue","openHideDiv","target","a","lists","concat","stopPropagation","filter","card","console","log","closeaddButton","allCards","deleteList","backgroundColor","border","color","fontStyle","CheckItem","updateCheckItem","checkItem","checked","readOnly","deleteCheckItem","CheckList","checkItems","addNewCheckItem","checkList","checkItemStatus","idCard","allItem","indexOf","deleteCheckList","styles","fontFamily","textAlign","Appp","cardId","checkLists","addNewCheckList","prevProps","open","onClose","closeModal","Lists","addNewList","match","params","list","cardObj","onCloseModal","allLists","justifyContent","Modal","App","Fragment","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.742b243d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n//import boards from './boards';\n\nfunction Header() {\n  return (\n    <header className='header'>\n      <Link to='/'>\n        <img\n          className='homeImg'\n          src='https://img.icons8.com/windows/32/000000/home-page.png'\n          alt='none'\n        />\n      </Link>\n      <Link to='/boards'>\n        <button className='btn btn-outline-light boardButton'>Boards</button>\n      </Link>\n      <div className='trello-img'>\n        <img\n          src='https://a.trellocdn.com/prgb/dist/images/header-logo-2x.01ef898811a879595cea.png'\n          alt='none'\n        />\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Board = props => {\n  return (\n    <div>\n      <Link to={`/board/${props.boards.id}`}>\n        <button className='boardB btn btn-primary active'>\n          {props.boards.name}\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { Component } from 'react';\nimport Board from './board';\nconst token =\n  '421401dc0406c370d37fcae4d35286fca589168586da4d3d914aa56f04324919';\nconst key = '0411d596f676963925b6cdc26d6adbbf';\n\nclass Boards extends Component {\n  state = {\n    boards: []\n  };\n  componentDidMount() {\n    fetch(\n      `https://api.trello.com/1/members/me/boards?filter=all&fields=all&lists=none&memberships=none&organization=false&organization_fields=name%2CdisplayName&key=${key}&token=${token}`,\n      {\n        method: 'GET'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        // console.log(data);\n        this.setState({\n          boards: data\n        });\n      });\n  }\n  render() {\n    var allBoards = this.state.boards.map(board => {\n      return <Board key={board.id} boards={board} />;\n    });\n    return allBoards;\n  }\n}\n\nexport default Boards;\n","import React from 'react';\n\nconst Home = () => {\n  return <h1 className='homeContent'>Welcome to My trello</h1>;\n};\n\nexport default Home;\n","import React from 'react';\nconst Card = props => {\n  return (\n    <div onClick={() => props.openModal(props.cards)} className='cardDiv'>\n      <h6 className='cardName'>{props.cards.name}</h6>\n      <div>\n        <button\n          onClick={event => props.deleteCard(event, props.cards.id)}\n          className='deleteButton btn btn-xsm'>\n          <i className='fa fa-trash'></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nclass Form extends React.Component {\n  state = {};\n  render() {\n    //hide from\n    return (\n      <div className='hideDiv' style={{ display: this.props.style.display }}>\n        <div className='hideInputDiv'>\n          <input\n            onChange={this.props.inputState}\n            className='input'\n            type='text'\n            value={this.props.input}\n            placeholder='enter title'\n          />\n        </div>\n        <div className='hideButtons'>\n          <button onClick={this.props.addNewCard} className='hideButton'>\n            {`Add ${this.props.buttonTitle}`}\n          </button>\n          <button onClick={this.props.closeInputDiv} className='hideButton1'>\n            X\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport Card from './Card';\nimport Form from './Form';\nconst token =\n  '421401dc0406c370d37fcae4d35286fca589168586da4d3d914aa56f04324919';\nconst key = '0411d596f676963925b6cdc26d6adbbf';\n\nclass List extends Component {\n  state = {\n    cards: [],\n    hideDiv: false,\n    inputValue: ''\n  };\n  componentDidMount() {\n    fetch(\n      `https://api.trello.com/1/lists/${this.props.lists.id}/cards?key=${key}&token=${token}`,\n      {\n        // method: 'GET'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          cards: data\n        });\n      });\n  }\n  openHideDiv = () => {\n    this.setState({\n      hideDiv: true\n    });\n  };\n  closeInputDiv = () => {\n    this.setState({\n      hideDiv: false\n    });\n  };\n  inputState = event => {\n    this.setState({\n      inputValue: event.target.value\n    });\n  };\n  addNewCard = async () => {\n    //console.log(this.props.lists.id);\n\n    await fetch(\n      `https://api.trello.com/1/cards?idList=${this.props.lists.id}&name=${this.state.inputValue}&keepFromSource=all&key=${key}&token=${token}`,\n      {\n        method: 'POST'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          cards: this.state.cards.concat([data]),\n          inputValue: ''\n        });\n      });\n  };\n\n  deleteCard = (event, id) => {\n    event.stopPropagation();\n    fetch(`https://api.trello.com/1/cards/${id}?key=${key}&token=${token}`, {\n      method: 'DELETE'\n    }).then(() => {\n      this.setState({ cards: this.state.cards.filter(card => card.id !== id) });\n    });\n  };\n  render() {\n    //console.log(this.state.inputValue);\n    var closeaddButton = this.state.hideDiv ? 'none' : 'block';\n    var openHideDiv = this.state.hideDiv ? 'block' : 'none';\n    var allCards = this.state.cards.map(card => {\n      return (\n        <Card\n          key={card.id}\n          cards={card}\n          deleteCard={this.deleteCard}\n          openModal={this.props.openModal}\n        />\n      );\n    });\n    return (\n      <div className='listContainer'>\n        <div className='listHead'>\n          <h5 className='listName'>{this.props.lists.name}</h5>\n          <button\n            onClick={() => this.props.deleteList(this.props.lists.id)}\n            className='btn-default deleteButtonForList'>\n            X\n          </button>\n        </div>\n        <div className='cards'>{allCards}</div>\n        <div>\n          <button\n            onClick={this.openHideDiv}\n            className='addButton btn btn-success'\n            style={{\n              display: closeaddButton,\n              backgroundColor: 'rgb(0, 0, 0, 0.2)',\n              border: 'none',\n              color: 'black',\n              fontStyle: 'bold'\n            }}>\n            +Add New Card\n          </button>\n        </div>\n        <Form\n          style={{ display: openHideDiv }}\n          closeInputDiv={this.closeInputDiv} //send function to from\n          inputState={this.inputState}\n          input={this.state.inputValue}\n          addNewCard={this.addNewCard}\n          buttonTitle='card'\n        />\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\n\nclass CheckItem extends Component {\n  state = {};\n  render() {\n    return (\n      <div className='checkItem'>\n        <input\n          onChange={() =>\n            /*eslint-disable */\n            this.props.updateCheckItem(event, this.props.checkItem)\n          }\n          type='checkBox'\n          className='checkBox'\n          checked={this.props.checkItem.state === 'complete' ? true : false}\n          readOnly\n        />\n        <div>\n          <p>{this.props.checkItem.name}</p>\n        </div>\n        <button\n          onClick={() => this.props.deleteCheckItem(this.props.checkItem.id)}\n          className='deleteButtonForItem'>\n          x\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default CheckItem;\n","import React, { Component } from 'react';\nimport Form from './Form';\nimport CheckItem from './CheckItem'; //component of checkItem\n\nconst token =\n  '421401dc0406c370d37fcae4d35286fca589168586da4d3d914aa56f04324919';\nconst key = '0411d596f676963925b6cdc26d6adbbf';\n\nclass CheckList extends Component {\n  state = {\n    checkItems: []\n  };\n  componentDidMount() {\n    fetch(\n      `https://api.trello.com/1/checklists/${this.props.checkList.id}/checkItems?key=${key}&token=${token}`,\n      {\n        method: 'GET'\n      }\n    )\n      .then(data => data.json())\n      .then(data =>\n        this.setState({\n          checkItems: data\n        })\n      );\n  }\n  openHideDiv = () => {\n    this.setState({\n      hideDiv: true\n    });\n  };\n  closeInputDiv = () => {\n    this.setState({\n      hideDiv: false\n    });\n  };\n  inputState = event => {\n    this.setState({\n      inputValue: event.target.value\n    });\n  };\n  addNewCheckItem = () => {\n    fetch(\n      `https://api.trello.com/1/checklists/${this.props.checkList.id}/checkItems?name=${this.state.inputValue}&pos=bottom&checked=false&key=${key}&token=${token}`,\n      {\n        method: 'POST'\n      }\n    )\n      .then(data => data.json())\n      .then(data =>\n        this.setState({\n          checkItems: this.state.checkItems.concat([data]),\n          inputValue: ''\n        })\n      );\n  };\n  deleteCheckItem = id => {\n    fetch(\n      `https://api.trello.com/1/checklists/${this.props.checkList.id}/checkItems/${id}?key=${key}&token=${token}`,\n      {\n        method: 'DELETE'\n      }\n    ).then(() => {\n      this.setState({\n        checkItems: this.state.checkItems.filter(\n          CheckItem => CheckItem.id !== id\n        )\n      });\n    });\n  };\n  updateCheckItem = (event, checkItem) => {\n    var checkItemStatus = event.target.checked ? 'complete' : 'incomplete';\n    fetch(\n      `https://api.trello.com/1/cards/${this.props.checkList.idCard}/checkItem/${checkItem.id}?state=${checkItemStatus}&key=${key}&token=${token}`,\n      {\n        method: 'PUT'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        var allItem = this.state.checkItems;\n        allItem[allItem.indexOf(checkItem)].state = data.state;\n        this.setState({\n          checkItems: allItem\n        });\n      });\n  };\n  render() {\n    //console.log(this.props.checkList);\n    var closeaddButton = this.state.hideDiv ? 'none' : 'block';\n    var openHideDiv = this.state.hideDiv ? 'block' : 'none';\n    let checkItems = this.state.checkItems.map(checkItem => (\n      <CheckItem\n        key={checkItem.id}\n        checkItem={checkItem}\n        deleteCheckItem={this.deleteCheckItem}\n        updateCheckItem={this.updateCheckItem}\n      />\n    ));\n    return (\n      <div className='checkListContainer'>\n        <h3>{this.props.checkList.name}</h3>\n        <div className='itemsContainer'>{checkItems}</div>\n        <div className='buttonsOfCheckList'>\n          <div>\n            <button\n              onClick={() =>\n                this.props.deleteCheckList(this.props.checkList.id)\n              }\n              className='deleteButtonForCheckList btn btn-danger btn-xsm'>\n              Delete\n            </button>\n          </div>\n          <div>\n            <button\n              onClick={this.openHideDiv}\n              style={{ display: closeaddButton }}\n              className='addButtonForCheckItem btn btn-primary btn-xsm'>\n              add items\n            </button>\n            <Form\n              style={{ display: openHideDiv }}\n              closeInputDiv={this.closeInputDiv}\n              inputState={this.inputState}\n              input={this.state.inputValue}\n              addNewCard={this.addNewCheckItem}\n              buttonTitle='check item'\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckList;\n","import React from 'react';\nimport Modal from 'react-responsive-modal'; //install lib for modal pop up\nimport CheckList from './CheckList';\nimport Form from './Form';\nconst token =\n  '421401dc0406c370d37fcae4d35286fca589168586da4d3d914aa56f04324919';\nconst key = '0411d596f676963925b6cdc26d6adbbf';\n\nconst styles = {\n  fontFamily: 'sans-serif',\n  textAlign: 'center'\n};\n\nclass Appp extends React.Component {\n  state = {\n    cardId: '',\n    checkLists: [],\n    hideDiv: false\n  };\n  componentDidUpdate(prevProps) {\n    if (this.props.card.id !== prevProps.card.id) {\n      fetch(\n        `https://api.trello.com/1/cards/${this.props.card.id}/checklists?checkItems=all&checkItem_fields=name%2CnameData%2Cpos%2Cstate&filter=all&fields=all&key=${key}&token=${token}`,\n        {\n          method: 'GET'\n        }\n      )\n        .then(data => data.json())\n        .then(data =>\n          this.setState({\n            checkLists: data\n          })\n        );\n    }\n  }\n  openHideDiv = () => {\n    this.setState({\n      hideDiv: true\n    });\n  };\n  closeInputDiv = () => {\n    this.setState({\n      hideDiv: false\n    });\n  };\n  inputState = event => {\n    this.setState({\n      inputValue: event.target.value\n    });\n  };\n  addNewCheckList = () => {\n    fetch(\n      `https://api.trello.com/1/cards/${this.props.card.id}/checklists?name=${this.state.inputValue}&key=${key}&token=${token}`,\n      {\n        method: 'POST'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          checkLists: this.state.checkLists.concat([data]),\n          inputValue: ''\n        });\n      });\n  };\n  deleteCheckList = id => {\n    fetch(\n      `https://api.trello.com/1/checklists/${id}?key=${key}&token=${token}`,\n      {\n        method: 'DELETE'\n      }\n    ).then(() => {\n      this.setState({\n        checkLists: this.state.checkLists.filter(\n          checkList => checkList.id !== id\n        )\n      });\n    });\n  };\n\n  render() {\n    var closeaddButton = this.state.hideDiv ? 'none' : 'block';\n    var openHideDiv = this.state.hideDiv ? 'block' : 'none';\n    let checkLists = this.state.checkLists.map(checkList => (\n      <CheckList\n        key={checkList.id}\n        checkList={checkList}\n        deleteCheckList={this.deleteCheckList}\n      />\n    ));\n    return (\n      <div style={styles}>\n        <Modal open={this.props.openModal} onClose={this.props.closeModal}>\n          <h2>{`${this.props.card.name}`}</h2>\n          <div>\n            <button\n              onClick={this.openHideDiv}\n              style={{ display: closeaddButton }}\n              className='btn btn-primary'>\n              Add checkList\n            </button>\n            <Form\n              style={{ display: openHideDiv }}\n              closeInputDiv={this.closeInputDiv}\n              inputState={this.inputState}\n              input={this.state.inputValue}\n              addNewCard={this.addNewCheckList}\n              buttonTitle='check list'\n            />\n          </div>\n          <div>{checkLists}</div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Appp;\n","import React, { Component } from 'react';\nimport List from './List';\nimport Form from './Form';\nimport Modal from './Modal';\nconst token =\n  '421401dc0406c370d37fcae4d35286fca589168586da4d3d914aa56f04324919';\nconst key = '0411d596f676963925b6cdc26d6adbbf';\n\nclass Lists extends Component {\n  state = {\n    lists: [],\n    hideDiv: false,\n    inputValue: '',\n    open: false,\n    card: {}\n  };\n  componentDidMount() {\n    //console.log('helee');\n    fetch(\n      //get all lists\n      `https://api.trello.com/1/boards/${this.props.match.params.id}/lists?key=${key}&token=${token}`,\n      {\n        method: 'GET'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        // console.log(data);\n        this.setState({\n          lists: data\n        });\n      });\n  }\n  openHideDiv = () => {\n    this.setState({\n      hideDiv: true\n    });\n  };\n  closeInputDiv = () => {\n    this.setState({\n      hideDiv: false\n    });\n  };\n  inputState = event => {\n    this.setState({\n      inputValue: event.target.value\n    });\n  };\n  addNewList = () => {\n    fetch(\n      `https://api.trello.com/1/lists?name=${this.state.inputValue}&idBoard=${this.props.match.params.id}&pos=bottom&key=${key}&token=${token}`,\n      {\n        method: 'POST'\n      }\n    )\n      .then(data => data.json())\n      .then(data => {\n        this.setState({\n          lists: this.state.lists.concat([data]),\n          inputValue: ''\n        });\n      });\n  };\n\n  deleteList = id => {\n    fetch(\n      `https://api.trello.com/1/lists/${id}/closed?value=true&key=${key}&token=${token}`,\n      {\n        method: 'PUT'\n      }\n    ).then(() => {\n      this.setState({ lists: this.state.lists.filter(list => list.id !== id) });\n    });\n  };\n  //use for open check list modal\n  openModal = cardObj => {\n    this.setState({\n      open: true,\n      card: cardObj\n    });\n    //this.getAllCheckList(cardObj);\n  };\n\n  onCloseModal = () => {\n    this.setState({\n      open: false\n    });\n  };\n  render() {\n    //console.log(this.state.checkLists);\n    var closeaddButton = this.state.hideDiv ? 'none' : 'block';\n    var openHideDiv = this.state.hideDiv ? 'block' : 'none';\n    var allLists = this.state.lists.map(list => {\n      return (\n        <List\n          key={list.id}\n          lists={list}\n          deleteList={this.deleteList}\n          openModal={this.openModal}\n        />\n      );\n    });\n    return (\n      //   <div>\n      <div\n        style={{ display: 'flex', justifyContent: 'space-between' }}\n        className='allLists'>\n        {allLists}\n        {/* </div> */}\n        <button\n          onClick={this.openHideDiv}\n          className='newListButton'\n          style={{ display: closeaddButton }}>\n          +Add List\n        </button>\n        <Form\n          style={{ display: openHideDiv }}\n          closeInputDiv={this.closeInputDiv}\n          inputState={this.inputState}\n          input={this.state.inputValue}\n          addNewCard={this.addNewList}\n          buttonTitle='list'\n        />\n        <Modal\n          openModal={this.state.open}\n          closeModal={this.onCloseModal}\n          card={this.state.card}\n          checkLists={this.state.checkLists}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Lists;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Boards from './components/boards';\nimport Home from './components/Home';\nimport Lists from './components/Lists';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <React.Fragment>\n        <Header />\n        <Route path='/' exact component={Home} />\n        <Route path='/boards' exact component={Boards} />\n        <Route path='/board/:id' exact component={Lists} />\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}